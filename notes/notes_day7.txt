1. create a browser-based application:
	a. create an HTML file
	b. Write JS source code in mutiple files using module concept and  link the main JS file with other JS files (index.js with calculation.js)[(ES6 module format)]
	c. install some transpiler s/w (packages) in our application
	d. convert (transform) othe module format into AMD for require js
	e. finally link the main JS (transformed) file with HTML file (index.js)
	f. link module-loader (require js) with HTML file for interpretation of JS modules and resolve dependencies and load all JS files in browser runtime

ECMAScript:
	ES6 (2015)
	

JavaScript:
	ES5 <2015
	ES6 features:
	const, let, spread operator


run JS code:
A. Browser environment:
1. write JS code in a file (.js file)
   link the file with HTML file 
   run the HTML (load) in the browser 
Result: means supply the HTML and the linked JS file to browser runtime and the browser runtime interprets the HTML file, thus displaying the design in browser and supply the JS file to JS engine, which will compile and execute the code in JS file

B. Node JS environment
   write JS code in a file (.js file)
   supply the file to Node runtime
Result: Node js runtime (which is built at the top of a JS engine - V8), will compile and execute the code in the JS file


Module:
-------
every JS file is a module
in Node JS there is JS object, known as "module", which is used to represent a JS module (a file)

require is a method of Node JS, NOT of browser
that's why you have to supply additionally a piece of s/w, known as module-loader, to understand and resolve dependencies amongst the JS files to the browser

Module loaders:
---------------------------
RequireJS: expects the code to ne written in AMD format
SystemJS

Module formats:
-------------------------------------
1. Common JS format: (default format to define JS modules in Node Js)
	module.exports ={propName: member-name}
	var mod = require('module-path')

2. ES6 new module format:
	export member
	import {} from ''

3. AMD (asynchronous module definition format)
   define(['./calculation'], function(require,..){})

4. UMD (Universal module definition format)

5. IIFE (Immediately Invocable Function Expression)

   (function(){
	var addFn = function(a,b){}
	var subFn = function(a,b){}
   })();

1. write code in AMD format itself
2. convert your code in AMD format
3. in case of Common JS format, use r.js (Node adpater for RequireJS)

Babel --> transpiler
